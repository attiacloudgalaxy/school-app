// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApi.Data;

#nullable disable

namespace SchoolApi.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SchoolApi.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Class 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Class 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Class 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Class 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Class 5"
                        });
                });

            modelBuilder.Entity("SchoolApi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassroomId = 1,
                            Name = "Student 1"
                        },
                        new
                        {
                            Id = 2,
                            ClassroomId = 1,
                            Name = "Student 2"
                        },
                        new
                        {
                            Id = 3,
                            ClassroomId = 1,
                            Name = "Student 3"
                        },
                        new
                        {
                            Id = 4,
                            ClassroomId = 1,
                            Name = "Student 4"
                        },
                        new
                        {
                            Id = 5,
                            ClassroomId = 2,
                            Name = "Student 5"
                        },
                        new
                        {
                            Id = 6,
                            ClassroomId = 2,
                            Name = "Student 6"
                        },
                        new
                        {
                            Id = 7,
                            ClassroomId = 2,
                            Name = "Student 7"
                        },
                        new
                        {
                            Id = 8,
                            ClassroomId = 2,
                            Name = "Student 8"
                        },
                        new
                        {
                            Id = 9,
                            ClassroomId = 3,
                            Name = "Student 9"
                        },
                        new
                        {
                            Id = 10,
                            ClassroomId = 3,
                            Name = "Student 10"
                        },
                        new
                        {
                            Id = 11,
                            ClassroomId = 3,
                            Name = "Student 11"
                        },
                        new
                        {
                            Id = 12,
                            ClassroomId = 3,
                            Name = "Student 12"
                        },
                        new
                        {
                            Id = 13,
                            ClassroomId = 4,
                            Name = "Student 13"
                        },
                        new
                        {
                            Id = 14,
                            ClassroomId = 4,
                            Name = "Student 14"
                        },
                        new
                        {
                            Id = 15,
                            ClassroomId = 4,
                            Name = "Student 15"
                        },
                        new
                        {
                            Id = 16,
                            ClassroomId = 4,
                            Name = "Student 16"
                        },
                        new
                        {
                            Id = 17,
                            ClassroomId = 5,
                            Name = "Student 17"
                        },
                        new
                        {
                            Id = 18,
                            ClassroomId = 5,
                            Name = "Student 18"
                        },
                        new
                        {
                            Id = 19,
                            ClassroomId = 5,
                            Name = "Student 19"
                        },
                        new
                        {
                            Id = 20,
                            ClassroomId = 5,
                            Name = "Student 20"
                        });
                });

            modelBuilder.Entity("SchoolApi.Models.Student", b =>
                {
                    b.HasOne("SchoolApi.Models.Classroom", "Classroom")
                        .WithMany("Students")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("SchoolApi.Models.Classroom", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
